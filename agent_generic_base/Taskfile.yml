---
# https://taskfile.dev
version: '3'
vars:
  # Cross-platform environment cleaning - uses 'env -u' on Unix systems, falls back to empty string on Windows
  CLEAN_PYTHON_ENV:
    sh: |
      if command -v env >/dev/null 2>&1; then
        echo "env -u PYTHONPATH -u VIRTUAL_ENV"
      else
        echo ""
      fi
tasks:
  install:
    desc: 🛠️ [agent_generic_base] Install agent uv dependencies
    cmds:
      - echo "Updating local dependencies for agent_generic_base"
      - uv sync --extra dev --quiet
    silent: true
    aliases:
      - req
  update:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: 🛠️ [agent_generic_base] Update local dependencies (refresh uv locks)
    cmds:
      - echo "Updating local dependencies"
      - uv sync --extra dev -U
    silent: true
  lint:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: 🧹 [agent_generic_base] Lint the codebase
    cmds:
      - task: req
      - echo "Linting the codebase"
      - "{{.CLEAN_PYTHON_ENV}} uv run ruff check . --fix"
      - "{{.CLEAN_PYTHON_ENV}} uv run ruff format ."
      - "{{.CLEAN_PYTHON_ENV}} uv run mypy --pretty ."
      - "{{.CLEAN_PYTHON_ENV}} uv run yamlfix custom_model"
    silent: true
  lint-check:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: 🧹 [agent_generic_base] Check whether the codebase is linted
    cmds:
      - task: req
      - echo "Checking linting"
      - "{{.CLEAN_PYTHON_ENV}} uv run ruff format --check --diff ."
      - "{{.CLEAN_PYTHON_ENV}} uv run ruff check --diff ."
      - echo "Checking type hints"
      - "{{.CLEAN_PYTHON_ENV}} uv run mypy --pretty ."
    silent: true
  test:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: 🧪 [agent_generic_base] Run tests
    cmds:
      - echo "Running pytest on tests"
      - "{{.CLEAN_PYTHON_ENV}} uv run pytest -vv ./tests/"
    silent: true
  test-coverage:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: 🧪 [agent_generic_base] Run tests with coverage
    cmds:
      - echo "Running pytest on tests"
      - "{{.CLEAN_PYTHON_ENV}} uv run pytest -vv --cov --cov-report=html --cov-report=term --cov-report xml:.coverage.xml ./tests/"
    silent: true
  cli:
    desc: 🖥️ [agent_generic_base] Run the CLI with provided arguments
    cmds:
      - echo "Running CLI {{.CLI_ARGS}}"
      - "{{.CLEAN_PYTHON_ENV}} uv run cli.py {{.CLI_ARGS}}"
    silent: true
  dev:
    # Hidden to avoid showing in task list, run `task --list-all` to see it
    # desc: 🔨 [agent_generic_base] Run the development server
    env:
      TARGET_NAME: response
      FLASK_DEBUG: 1
    cmds:
      - echo "Running development server on http://localhost:8842"
      - "{{.CLEAN_PYTHON_ENV}} uv run drum server -cd custom_model --address localhost:8842 --target-type agenticworkflow"
      - wait
  build-docker:
    desc: 🐳 [agent_generic_base] Build the Docker image
    cmds:
      - echo "Building Docker image"
      - cp pyproject.toml docker_context/pyproject.toml
      - cd docker_context && docker build  --platform linux/amd64 -f Dockerfile -t agent_generic_base:latest .
      - echo "Saving Docker image"
      - docker save agent_generic_base:latest | gzip -1 > docker_context.tar.gz
    silent: true
